{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Charts.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","top","Grid","container","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","variant","color","gutterBottom","start","end","value","duration","separator","Date","toLocaleString","zeroMinWidth","CircularProgress","disableShrink","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","china","date","reportDate","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed84844d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__308kD\",\"top\":\"Cards_top__21zKZ\",\"card\":\"Cards_card__3QyuE\",\"infected\":\"Cards_infected__19z7K\",\"recovered\":\"Cards_recovered__1r0hu\",\"deaths\":\"Cards_deaths__1v5Xg\"};","import React from 'react';\r\nimport {\r\n\tCard,\r\n\tCardContent,\r\n\tTypography,\r\n\tGrid,\r\n\tCircularProgress,\r\n} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn (\r\n\t\t\t<div className={styles.top}>\r\n\t\t\t\t<CircularProgress disableShrink />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles.top}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t累计确诊\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\t\tduration={2.0}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toLocaleString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t确诊人数\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}\r\n\t\t\t\t\tzeroMinWidth\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t治愈\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\t\tduration={2.75}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toLocaleString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t治愈人数\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t死亡\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\t\tduration={2.75}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toLocaleString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t死亡人数\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\r\n\t\t} = await axios.get(url);\r\n\r\n\t\treturn {\r\n\t\t\tconfirmed,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tlastUpdate,\r\n\t\t};\r\n\t} catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.china,\r\n\t\t\tdeaths: dailyData.deaths.china,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\t\treturn modifiedData;\r\n\t} catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\nexport default function Charts() {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t});\r\n\r\n\tconst lineChart =\r\n\t\tdailyData.length !== 0 ? (\r\n\t\t\t<Line\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\t\tlabel: '确诊人数',\r\n\t\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\t\tlabel: '死亡人数',\r\n\t\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t) : null;\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<h3>国内疫情</h3>\r\n\t\t\t{lineChart}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CountryPicker() {\r\n\treturn <div></div>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Cards, CountryPicker, Charts } from './components';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t};\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\t\tthis.setState({\r\n\t\t\tdata: fetchedData,\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { data } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker />\r\n\t\t\t\t<Charts />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2XVlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3wYVK\",\"image\":\"App_image__nI4X2\"};"],"sourceRoot":""}